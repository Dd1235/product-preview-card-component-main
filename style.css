/*  */
:root{
    /* font weigth 400, heavier 6,7,8,9 thinner go 1,2 */
--clr-primary-400:hsl(158, 36%, 37%); 
/* hue saturation lightness , decrease lightness to make darker*/
--clr-primary-500:hsl(158, 36%, 20%); 

--clr-secondary-200:hsl(30, 38%, 92%);

--clr-neutral-900:hsl(212, 21%, 14%);
--clr-neutral-400:hsl(228, 12%, 48%);
--clr-neutral-100:hsl(0, 0%, 100%); 
/* going with 100 for the lighest */

--ff-accent: 'Fraunces', serif;
--ff-base: 'Montserrat', sans-serif;

--fw-regular:500;
--fw-bold:700;
}



/* start with a css reset */
/* dev tools try using responsive mode */
/* reset copied form Josh Comeau */

/*
  1. Use a more-intuitive box-sizing model.
*/
*, *::before, *::after {
    box-sizing: border-box;
  }
  /*
    2. Remove default margin
  */
  * {
    margin: 0;
  }
  /*
    3. Allow percentage-based heights in the application
  */
  html, body {
    height: 100%;
  }
  /*
    Typographic tweaks!
    4. Add accessible line-height
    5. Improve text rendering
  */
  body {
    line-height: 1.5;
    -webkit-font-smoothing: antialiased;
  }
  /*
    6. Improve media defaults
  */
  img, picture, video, canvas, svg {
    display: block;
    max-width: 100%;
  }
  /*
    7. Remove built-in form typography styles
  */
  input, button, textarea, select {
    font: inherit;
  }
  /*
    8. Avoid text overflows (it will cause the word to break if font-size is too big for the screen)
  */
  p, h1, h2, h3, h4, h5, h6 {
    overflow-wrap: break-word;
  }
    h1,h2,h3{
    line-height:1;
    }

  /* general styling */

  body{
    font-family: var(--ff-base);
    font-weight: var(--fw-regular);
    font-size: 0.875rem;
    color: var(--clr-neutral-400);
    background-color: var(--clr-secondary-200);
    /* for this project only */
    display:grid;
    place-content:center;
    /* if this doesn't work can try min height 100vh */
    margin:1rem; 
  }
  /* utilities */

  .visually-hidden:not(:focus):not(:active){
    clip:rect(0 0 0 0);
    clip-path: inset(50%);
    height:1px;
    overflow:hidden;
    position:absolute;
    white-space: nowrap;
    width: 1px;
  }

  /* button */
  button{
    cursor:poitner;
    text-decoration:none; /* in case links get added*/
    display: inline-flex;
    justify-content:center;
    align-items: center;
    gap:0.75rem;

 
    border:0;
    border-radius:0.5rem;
    padding: .5em 1.5em; /* .5 top and bottom, 1.5 for left and right go  1:3*/
    padding:0.75em 1.5em;
    background-color: var(--clr-primary-400);
    color: var(--clr-neutral-100);
    font-weight: var(--fw-bold);
    font-size: 0.925rem;
  }

.button[data-icon="shopping-cart"]::before {
   
    content:""; 
     /* if we don't include a content in our pseaudo element it won't show up on the page */
    width: 15px;
    background-image: url("images/icon-cart.svg") ;
    height: 16px;
}

.button:is(:hover,:focus){
    background-color: var(--clr-primary-500);
}
.flex-group{
    display: flex;
    gap:1rem;
    /* to prevent overflow and let it wrap if it needs to */
    flex-wrap:wrap; 
    align-items:center;
}

  /* product styles */
  .product{
    --content--padding:1.5rem; /* locally scoped custom property */
    --content-spacing: 1rem;
    display: grid;
    background-color: var(--clr-neutral-100);
    /* rem is usually base 16 */
    border-radius:0.5rem; 
    overflow:hidden;
    /* so that spacing dones't get messed up as the screen gets bigger (doens't get too tall)*/
    max-width: 600px; 
  }

  @media(min-width:600px){
    .product{
        --content-padding:2rem;
        grid-template-columns: 1fr 1fr;
    }
  }
  .product__content{
    display: grid; 
    gap: var(--content-spacing); /* since it's a sgrid*/
    padding: var(--content--padding); 
    /* later on if you want to make changes just need to go through the product class */
  }
  .product__category{
    font-size:0.8125rem;
    text-transform:uppercase;
    letter-spacing:5px;
      /*could be safer to use em so that spacing changes with font-size but with letter spacing we're dealing with small nums so using px*/
  }
  .product__title{
    font-size: 2rem;
    font-family:var(--ff-accent);
    color: var(--clr-neutral-900);
  }
  /* since we're using the same multiple times can use a utility class */
  .product__price{
    font-size: 2rem;
    font-family:var(--ff-accent);
    color:var(--clr-primary-400);
  }
